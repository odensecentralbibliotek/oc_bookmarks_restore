<?php
/**
 * Implements hook_menu().
 *
 * Adds the charting result page on each Webform node.
 */
function oc_bookmarks_restore_menu() {
 $items = array();
 $items['oc/bookmarks/restore'] = array(
    'page callback' => 'oc_bookmarks_restore_user_login', // Render HTML
    'description' => 'Attempts to restore a users bookmarks after migrate to 5.5',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content')
   );
  return $items;
}
function oc_bookmarks_restore_user_login($form,$form_state)
{
    global $user;
    $auth_name_old = substr($form_state->init,0,35);
    // Try to find the users uid based on the old hash value (length of the old
  // hash should be 96).
    $old_uid = db_select('authmap', 'a')
    ->fields('a', array('uid'))
    ->condition('authname', $auth_name_old."%","LIKE")
    ->condition('uid', $user->uid, '!=')
    ->execute()
    ->fetchField();

    // Proceed only in the case it exists and needs to be updated.
    if ($old_uid) {
        $old_user = user_load($old_uid);
        if($old_user->email == $user->email)
        {
            //update the bookmarks.
            $count = oc_bookmarks_restore_update_bookmarks($old_uid,$user->uid);
        }
    }
}
function oc_bookmarks_restore_update_bookmarks($old_uid,$new_uid)
{
  /*
    $query = db_select('flag_content', 'n')
      ->condition('n.uid', $old_uid, '=')
      ->fields('n', array('uid'))
      ->execute();
      return $num = $query->rowCount();
    */
    $num_updated = db_update('flag_content')
    ->fields(array(
      'uid' => $new_uid,
    ))
    ->condition('uid',$old_uid, '=')
    ->execute();
    
    return $num_updated;
}